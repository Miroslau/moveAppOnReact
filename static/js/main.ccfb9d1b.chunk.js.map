{"version":3,"sources":["Components/MoveItem/MoveItem.js","Components/MoveList/MoveList.js","redux/types.js","redux/actions.js","Components/Loader/Loader.js","Components/SearchMove/SearchMove.js","Components/Pagination/Pagination.js","Components/TypeMoveItem/TypeMoveItem.js","Components/Move/Move.js","App.js","reportWebVitals.js","redux/movesReducer.js","redux/appReducer.js","redux/paramsReducer.js","redux/rootReducer.js","store/store.js","index.js"],"names":["MoveItem","move","className","src","Poster","alt","Title","Year","imdbID","Type","MoveList","allMoves","map","index","FETCH_MOVES","SHOW_LOADER","HIDE_LOADER","CHANGE_PARAMS","fetchMoves","name","page","type","dispatch","a","query","request","push","fetch","join","response","json","payload","changeParams","param","Loader","SearchMove","onFind","useState","value","setValue","onSubmit","e","preventDefault","trim","onChange","event","target","Pagination","totalResults","openPage","pages","totalPages","Math","ceil","onClick","previousPage","slice","currentPage","clickPage","getListPage","nextPage","TypeMoveItem","typesMoves","clickItem","typeMove","id","Move","useDispatch","params","useSelector","state","moves","fetchedMoves","loading","app","useEffect","Search","movesAll","title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccfb9d1b.chunk.js","sourcesContent":["import React from 'react'\nimport './MoveItem.css'\n\nconst MoveItem = ({move}) => {\n    return (\n        <div className='card'>\n            <img className='image'\n                 src={move.Poster !== 'N/A' ? move.Poster\n                : 'https://upload.wikimedia.org/wikipedia/commons/1/14/Media_Player_Classic_MPC_With_Shadow_No_Numbers.png'}\n                 alt='poster'/>\n            <div className='description'>\n                <ul>\n                    <li>Name: {move.Title}</li>\n                    <li>Year: {move.Year}</li>\n                    <li>imdbID: {move.imdbID}</li>\n                    <li>Type: {move.Type}</li>\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default MoveItem","import React from 'react'\nimport './MoveList.css'\nimport MoveItem from '../MoveItem/MoveItem'\n\nconst MoveList = ({allMoves}) => {\n    return (\n        <div className=\"list\">\n            {\n                allMoves.map((move, index) => {\n                    return (\n                        <MoveItem move={move} key={index + 1}/>\n                    );\n                })\n            }\n        </div>\n    );\n}\n\nexport default MoveList","export const FETCH_MOVES = 'GET/FETCH_MOVES'\nexport const SHOW_LOADER = 'APP/SHOW_LOADER'\nexport const HIDE_LOADER = 'APP/HIDE_LOADER'\nexport const CHANGE_PARAMS = 'APP/CHANGE_PARAMS'","import {CHANGE_PARAMS, FETCH_MOVES, HIDE_LOADER, SHOW_LOADER} from './types'\n\nexport function fetchMoves ({name, page, type}) {\n    return async dispatch => {\n        dispatch(showLoader())\n        const query = `https://www.omdbapi.com/?i=tt3896198&apikey=8523cbb8&s=${name}&page=${page}`\n        const request = [query]\n        if (type) request.push(`&type=${type}`)\n        const response = await fetch(request.join(''))\n        const json = await response.json()\n        dispatch({type: FETCH_MOVES, payload: json})\n        dispatch(hideLoader())\n    }\n}\n\nexport function changeParams (param) {\n    return {type: CHANGE_PARAMS, payload: param}\n}\n\nexport function showLoader () {\n    return {\n        type: SHOW_LOADER\n    }\n}\n\nexport function hideLoader () {\n    return {\n        type: HIDE_LOADER\n    }\n}","import React from 'react'\nimport './Loader.css'\n\nconst Loader = () => <div className=\"lds-ring\">\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n</div>\n\nexport default Loader","import React, {useState} from 'react'\nimport './SearchMove.css'\n\nconst SearchMove = ({onFind, name}) => {\n    const [value, setValue] = useState(name)\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (value.trim()) {\n            onFind(value)\n        }\n    }\n    return (\n        <div className='search-container'>\n            <h1>Move Catalog</h1>\n            <form onSubmit={onSubmit}>\n                <input type='text' value={value} onChange={event => setValue(event.target.value)}/>\n            </form>\n            <div className='login'>\n                <span>Miroslav Ryabikov</span>\n            </div>\n        </div>\n    );\n}\n\nexport default SearchMove","import React from 'react'\nimport './Pagination.css'\n\nconst Pagination = ({page, totalResults, openPage}) => {\n    const pages = []\n    const totalPages = Math.ceil(totalResults / 10)\n    for (let index = 1; index <= totalPages; index++) {\n        pages.push(index)\n    }\n\n    const clickPage = (page) => {\n        openPage(page)\n    }\n\n    const previousPage = (page) => {\n        openPage(--page)\n    }\n\n    const nextPage = (page) => {\n        openPage(++page)\n    }\n\n    const getListPage = (pages) => {\n        const fivePage = pages.slice(page - 1, page + 5)\n        return fivePage.map(currentPage => {\n            return (\n                <div className='pagination-container__page'\n                     key={currentPage}\n                     onClick={() => clickPage(currentPage)}\n                >\n                    {currentPage}\n                </div>\n            );\n        })\n    }\n    return (\n        <div className='pagination-container'>\n            {\n                page !== 1 ? <div className='pagination-container__prev' onClick={() => previousPage(page)}>Previous</div> : null\n            }\n            { getListPage(pages) }\n            {\n                page !== totalPages ? <div className='pagination-container__next' onClick={() => nextPage(page)}>Next</div> : null\n            }\n        </div>\n    );\n}\n\nexport default Pagination","import React from 'react'\r\nimport './TypeMoveItem.css'\r\n\r\nconst TypeMoveItem = ({typesMoves, clickItem}) => {\r\n    return (\r\n        <div className='type-move-item'>\r\n            {\r\n                typesMoves.map(typeMove => {\r\n                    return (\r\n                        <div key={typeMove.id}\r\n                             className='type-move-item__item'\r\n                             onClick={() => clickItem(typeMove)}\r\n                        >\r\n                            {typeMove.type}\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TypeMoveItem","import React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport './Move.css'\nimport MoveList from '../MoveList/MoveList'\nimport {changeParams, fetchMoves} from '../../redux/actions'\nimport Loader from '../Loader/Loader'\nimport SearchMove from '../SearchMove/SearchMove'\nimport Pagination from '../Pagination/Pagination'\nimport TypeMoveItem from '../TypeMoveItem/TypeMoveItem'\n\nconst Move = () => {\n    const dispatch = useDispatch()\n    const params = useSelector(state => state.params.params)\n    const allMoves = useSelector(state => state.moves.fetchedMoves)\n    const loading = useSelector(state => state.app.loading)\n\n    const findMove = (title) => {\n        params.name = title\n        dispatch(changeParams(params))\n        dispatch(fetchMoves(params))\n    }\n\n    useEffect(() => {\n        dispatch(fetchMoves(params))\n    }, [dispatch, params])\n    if (loading) {\n        return <Loader className='loader'/>\n    }\n    const {Search, totalResults} = allMoves\n    const movesAll = Search\n\n    const typesMoves = [\n        {\n            id: 1,\n            type: 'movie'\n        },\n        {\n            id: 2,\n            type: 'series'\n        },\n        {\n            id: 3,\n            type: 'episode'\n        }\n    ]\n\n    const choseType = (move) => {\n        const {type} = move\n        params.type = type\n        dispatch(changeParams(params))\n        dispatch(fetchMoves(params))\n    }\n\n    return (\n        <div className=\"move\">\n            <div className='search'>\n                <SearchMove onFind={findMove} name={params.name}/>\n            </div>\n            <div className='results'>\n                {\n                    totalResults ? <span>You searched for: {totalResults}</span> : null\n                }\n            </div>\n            <div className='move-filter move-list'>\n                <TypeMoveItem clickItem={choseType} typesMoves={typesMoves}/>\n            </div>\n            <div className=\"move-list\">\n                {\n                    movesAll ? <MoveList allMoves={movesAll}/> : <div>You don't have moves</div>\n                }\n            </div>\n            <div className='pagination'>\n                {\n                    totalResults ? <Pagination page={params.page}\n                                               openPage={(page) => {\n                                                   params.page = page\n                                                   dispatch(changeParams(params))\n                                                   dispatch(fetchMoves(params))\n                                                }\n                                               }\n                                               totalResults={totalResults}/> : null\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Move","import React from 'react'\nimport Move from './Components/Move/Move'\n\nfunction App() {\n  return (\n    <div>\n      <Move/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {FETCH_MOVES} from \"./types\";\n\nconst initialState = {\n    moves: [],\n    fetchedMoves: []\n}\n\nexport const movesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_MOVES:\n            return {...state, fetchedMoves: action.payload}\n        default: return state\n    }\n}","import {HIDE_LOADER, SHOW_LOADER} from \"./types\";\n\nconst initialState = {\n    loading: false,\n}\n\nexport const appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SHOW_LOADER:\n            return {...state, loading: true}\n        case HIDE_LOADER: {\n            return {...state, loading: false}\n        }\n        default: return state\n    }\n}","import {CHANGE_PARAMS} from \"./types\";\n\nconst initialState = {\n    params: {\n        page: 1,\n        name: 'Batman'\n    }\n}\n\nexport const paramsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CHANGE_PARAMS:\n            return {...state, params: action.payload}\n        default: return state\n    }\n}","import {combineReducers} from 'redux'\nimport {movesReducer} from \"./movesReducer\";\nimport {appReducer} from \"./appReducer\";\nimport {paramsReducer} from \"./paramsReducer\";\n\nexport const rootReducer = combineReducers({\n    moves: movesReducer,\n    app: appReducer,\n    params: paramsReducer\n})","import {compose, createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {rootReducer} from '../redux/rootReducer'\n\nconst store = createStore(rootReducer, compose(\n    applyMiddleware(\n      thunk\n    ),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n))\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}